/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package advancedimageviewer;

/**
 *
 * @author Ethan
 */
public class AIVEnhance extends javax.swing.JFrame {

    /**
     * Creates new form AIVEnhance
     */
    public AIVFrame parent;
    
    public AIVEnhance(AIVFrame a) {
        parent = a;
        parent.enhanceframe = this;
        parent.moveEnhanceFrame();
        setUndecorated(true);
        initComponents();
        setTitle("AIV Enhance");
        
        new Thread(){
            public void run(){
                while(true){
                    UpdateSliderData();
                    try{Thread.sleep(100);}catch(Exception ex){}
                }
            }
        }.start();
        
        setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        CVButton = new javax.swing.JButton();
        CVSlider = new javax.swing.JSlider();
        CVLabel = new javax.swing.JLabel();
        CVByColorCheckbox = new javax.swing.JCheckBox();
        CVGammaSlider = new javax.swing.JSlider();
        CVGammaLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        CVButton.setText("Contiguous Variance");
        CVButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CVButtonActionPerformed(evt);
            }
        });

        CVSlider.setMaximum(3000);
        CVSlider.setValue(300);

        CVLabel.setText("Intensity: DEFAULT");

        CVByColorCheckbox.setText("By Color");
        CVByColorCheckbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CVByColorCheckboxActionPerformed(evt);
            }
        });

        CVGammaSlider.setMaximum(300);
        CVGammaSlider.setMinimum(1);
        CVGammaSlider.setValue(100);

        CVGammaLabel.setText("Gamma: DEFAULT");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(CVGammaSlider, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addComponent(CVButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(CVLabel, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(CVSlider, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                    .addComponent(CVByColorCheckbox)
                    .addComponent(CVGammaLabel))
                .addContainerGap(285, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(CVButton)
                .addGap(1, 1, 1)
                .addComponent(CVLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(CVSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addComponent(CVGammaLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(CVGammaSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(CVByColorCheckbox)
                .addContainerGap(147, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private float cvmul = 1f;
    private float cvgamma = 1f;
    private boolean cvbycol = false;
    
    private void CVButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CVButtonActionPerformed
        UpdateSliderData();
        ImageProcessor.VARIANCEMUL = cvmul;
        ImageProcessor.VARIANCECOLORMODE = cvbycol;
        ImageProcessor.VARIANCEGAMMA = cvgamma;
        //parent.vimg = ImageProcessor.applyVarianceDots(parent.img);
        ImageTransposer.transpose(parent, ImageProcessor.applyVarianceDots(parent.img));
        parent.repaint();
    }//GEN-LAST:event_CVButtonActionPerformed

    private void CVByColorCheckboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CVByColorCheckboxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CVByColorCheckboxActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton CVButton;
    private javax.swing.JCheckBox CVByColorCheckbox;
    private javax.swing.JLabel CVGammaLabel;
    private javax.swing.JSlider CVGammaSlider;
    private javax.swing.JLabel CVLabel;
    private javax.swing.JSlider CVSlider;
    // End of variables declaration//GEN-END:variables

    private float ConvSliderData(int a){return a/100f;}
    
    private void UpdateSliderData(){
        cvmul = ConvSliderData(CVSlider.getValue());
        CVLabel.setText("Intensity: "+cvmul);
        cvbycol = CVByColorCheckbox.isSelected();
        cvgamma = ConvSliderData(CVGammaSlider.getValue());
        CVGammaLabel.setText("Gamma: "+cvgamma);
    }
}
