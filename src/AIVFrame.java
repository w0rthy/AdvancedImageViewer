/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package advancedimageviewer;

import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Toolkit;
import java.awt.event.ComponentEvent;
import java.awt.event.ComponentListener;
import java.awt.image.BufferedImage;

/**
 *
 * @author Ethan
 */
public class AIVFrame extends javax.swing.JFrame {

    public AIVTools toolframe;
    public AIVEnhance enhanceframe;
    public BufferedImage img;
    public BufferedImage vimg;
    /**
     * Creates new form AIVFrame
     */
    public AIVFrame() {
        if(img == null){
            img = new BufferedImage(1, 1, BufferedImage.TYPE_INT_RGB);
            vimg = img;
        }
        
        toolframe = new AIVTools(this);
        initComponents();
        setTitle("Advanced Image Viewer");
        
        addComponentListener(new ComponentListener() {
            @Override
            public void componentResized(ComponentEvent e) {
                toolframe.setLocation(Math.min(getX()+getWidth(),Toolkit.getDefaultToolkit().getScreenSize().width-toolframe.getWidth()), getY());
                moveEnhanceFrame();
            }

            @Override
            public void componentMoved(ComponentEvent e) {
                toolframe.setLocation(Math.min(getX()+getWidth(),Toolkit.getDefaultToolkit().getScreenSize().width-toolframe.getWidth()), getY());
                moveEnhanceFrame();
            }

            @Override
            public void componentShown(ComponentEvent e) {
                toolframe.setVisible(true);
                if(enhanceframe != null)
                    enhanceframe.setVisible(true);
            }

            @Override
            public void componentHidden(ComponentEvent e) {
                toolframe.setVisible(false);
                if(enhanceframe != null)
                    enhanceframe.setVisible(false);
            }
        });
        
        setVisible(true);
    }
    
    public void moveEnhanceFrame(){
        if(enhanceframe != null)
            enhanceframe.setLocation(Math.min(getX()+getWidth(),Toolkit.getDefaultToolkit().getScreenSize().width-toolframe.getWidth()), getY()+toolframe.getHeight());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1024, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 720, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables

    @Override
    public void paint(Graphics g2){
        Graphics2D g = (Graphics2D)g2;
        
        Dimension d = getImageSize();
        g.drawImage(vimg, 0, 0, d.width, d.height, null);
    }
    
    private Dimension getImageSize(){
        double w = (double)getWidth()/img.getWidth();
        double h = (double)getHeight()/img.getHeight();
        if(w<=h)
            return new Dimension(getWidth(), (int)(img.getHeight()*w));
        
        return new Dimension((int)(img.getWidth()*h), getHeight());   
    }

    void applyColorProfile(float[] colorsettings) {
        ImageProcessor.setColorSettings(colorsettings);
        vimg = ImageProcessor.ProcessImage(img);
        repaint();
    }
    
    void formToImage(){
        setSize(Math.min(img.getWidth(),Math.max(getWidth(),1024)),Math.min(img.getHeight(),Math.max(getHeight(), 720)));
        setSize(getImageSize());
    }
}
